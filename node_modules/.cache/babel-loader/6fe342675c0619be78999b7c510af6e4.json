{"ast":null,"code":"/*!\n * https://github.com/umarwebdeveloper/jquery-css-skills-bar\n * Author: @umarwebdeveloper\n * Licensed under the MIT license\n */\n(function ($) {\n  $.fn.skillBars = function (options) {\n    var settings = $.extend({\n      from: 0,\n      // number start\n      to: false,\n      // number end\n      speed: 1000,\n      // how long it should take to count between the target numbers\n      interval: 100,\n      // how often the element should be updated\n      decimals: 0,\n      // the number of decimal places to show\n      onUpdate: null,\n      // callback method for every time the element is updated,\n      onComplete: null,\n      // callback method for when the element finishes updating\n\n      /*onComplete: function(from) {\n                   console.debug(this);\n               }*/\n      classes: {\n        skillBarBar: '.skillbar-bar',\n        skillBarPercent: '.skill-bar-percent'\n      }\n    }, options);\n    return this.each(function () {\n      var obj = $(this),\n          to = settings.to != false ? settings.to : parseInt(obj.attr('data-percent'));\n\n      if (to > 100) {\n        to = 100;\n      }\n\n      ;\n      var from = settings.from,\n          loops = Math.ceil(settings.speed / settings.interval),\n          increment = (to - from) / loops,\n          loopCount = 0,\n          interval = setInterval(updateValue, settings.interval);\n      obj.find(settings.classes.skillBarBar).animate({\n        width: parseInt(obj.attr('data-percent')) + '%'\n      }, settings.speed);\n\n      function updateValue() {\n        from += increment;\n        loopCount++;\n        $(obj).find(settings.classes.skillBarPercent).text(from.toFixed(settings.decimals) + '%');\n\n        if (typeof settings.onUpdate == 'function') {\n          settings.onUpdate.call(obj, from);\n        }\n\n        if (loopCount >= loops) {\n          clearInterval(interval);\n          from = to;\n\n          if (typeof settings.onComplete == 'function') {\n            settings.onComplete.call(obj, from);\n          }\n        }\n      }\n    });\n  };\n})(jQuery);","map":{"version":3,"sources":["/home/uneey/Desktop/projects/Simex/simex-front/src/js/skill.bars.jquery.js"],"names":["$","fn","skillBars","options","settings","extend","from","to","speed","interval","decimals","onUpdate","onComplete","classes","skillBarBar","skillBarPercent","each","obj","parseInt","attr","loops","Math","ceil","increment","loopCount","setInterval","updateValue","find","animate","width","text","toFixed","call","clearInterval","jQuery"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEC,WAAWA,CAAX,EAAe;AAEZA,EAAAA,CAAC,CAACC,EAAF,CAAKC,SAAL,GAAiB,UAAUC,OAAV,EAAoB;AAEjC,QAAIC,QAAQ,GAAGJ,CAAC,CAACK,MAAF,CAAS;AAC7BC,MAAAA,IAAI,EAAE,CADuB;AAChB;AACbC,MAAAA,EAAE,EAAE,KAFyB;AAEhB;AACbC,MAAAA,KAAK,EAAE,IAHsB;AAGb;AAChBC,MAAAA,QAAQ,EAAE,GAJmB;AAIZ;AACjBC,MAAAA,QAAQ,EAAE,CALmB;AAKb;AAChBC,MAAAA,QAAQ,EAAE,IANmB;AAMX;AAClBC,MAAAA,UAAU,EAAE,IAPiB;AAOT;;AACpB;AACH;AACA;AACGC,MAAAA,OAAO,EAAC;AACPC,QAAAA,WAAW,EAAG,eADP;AAEPC,QAAAA,eAAe,EAAG;AAFX;AAXqB,KAAT,EAeZZ,OAfY,CAAf;AAiBA,WAAO,KAAKa,IAAL,CAAU,YAAU;AAEhC,UAAIC,GAAG,GAAGjB,CAAC,CAAC,IAAD,CAAX;AAAA,UACCO,EAAE,GAAIH,QAAQ,CAACG,EAAT,IAAe,KAAhB,GAAyBH,QAAQ,CAACG,EAAlC,GAAuCW,QAAQ,CAACD,GAAG,CAACE,IAAJ,CAAS,cAAT,CAAD,CADrD;;AAEC,UAAGZ,EAAE,GAAG,GAAR,EAAY;AACXA,QAAAA,EAAE,GAAG,GAAL;AACA;;AAAA;AACF,UAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;AAAA,UACCc,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUlB,QAAQ,CAACI,KAAT,GAAiBJ,QAAQ,CAACK,QAApC,CADT;AAAA,UAEUc,SAAS,GAAG,CAAChB,EAAE,GAAGD,IAAN,IAAcc,KAFpC;AAAA,UAGCI,SAAS,GAAG,CAHb;AAAA,UAICf,QAAQ,GAAGgB,WAAW,CAACC,WAAD,EAActB,QAAQ,CAACK,QAAvB,CAJvB;AAMAQ,MAAAA,GAAG,CAACU,IAAJ,CAASvB,QAAQ,CAACS,OAAT,CAAiBC,WAA1B,EAAuCc,OAAvC,CAA+C;AAC9CC,QAAAA,KAAK,EAAEX,QAAQ,CAACD,GAAG,CAACE,IAAJ,CAAS,cAAT,CAAD,CAAR,GAAmC;AADI,OAA/C,EAEGf,QAAQ,CAACI,KAFZ;;AAIA,eAASkB,WAAT,GAAsB;AACrBpB,QAAAA,IAAI,IAAIiB,SAAR;AACYC,QAAAA,SAAS;AACTxB,QAAAA,CAAC,CAACiB,GAAD,CAAD,CAAOU,IAAP,CAAYvB,QAAQ,CAACS,OAAT,CAAiBE,eAA7B,EAA8Ce,IAA9C,CAAmDxB,IAAI,CAACyB,OAAL,CAAa3B,QAAQ,CAACM,QAAtB,IAAgC,GAAnF;;AAEA,YAAI,OAAON,QAAQ,CAACO,QAAhB,IAA6B,UAAjC,EAA6C;AACzCP,UAAAA,QAAQ,CAACO,QAAT,CAAkBqB,IAAlB,CAAuBf,GAAvB,EAA4BX,IAA5B;AACH;;AAED,YAAIkB,SAAS,IAAIJ,KAAjB,EAAwB;AACpBa,UAAAA,aAAa,CAACxB,QAAD,CAAb;AACAH,UAAAA,IAAI,GAAGC,EAAP;;AAEA,cAAI,OAAOH,QAAQ,CAACQ,UAAhB,IAA+B,UAAnC,EAA+C;AAC3CR,YAAAA,QAAQ,CAACQ,UAAT,CAAoBoB,IAApB,CAAyBf,GAAzB,EAA8BX,IAA9B;AACH;AACJ;AACb;AAEK,KApCM,CAAP;AAsCH,GAzDD;AA2DH,CA7DA,EA6DE4B,MA7DF,CAAD","sourcesContent":["/*!\n * https://github.com/umarwebdeveloper/jquery-css-skills-bar\n * Author: @umarwebdeveloper\n * Licensed under the MIT license\n */\n \n(function ( $ ) {\n \n    $.fn.skillBars = function( options ) {\n \n        var settings = $.extend({\n\t\t\tfrom: 0,  \t\t\t// number start\n\t\t\tto: false,\t\t\t// number end\n\t\t\tspeed: 1000,  \t\t// how long it should take to count between the target numbers\n\t\t\tinterval: 100,\t  // how often the element should be updated\n\t\t\tdecimals: 0,\t\t  // the number of decimal places to show\n\t\t\tonUpdate: null,\t  // callback method for every time the element is updated,\n\t\t\tonComplete: null,\t  // callback method for when the element finishes updating\n\t\t\t/*onComplete: function(from) {\n                console.debug(this);\n            }*/\n\t\t\tclasses:{\n\t\t\t\tskillBarBar : '.skillbar-bar',\n\t\t\t\tskillBarPercent : '.skill-bar-percent',\n\t\t\t}\n        }, options );\n \n        return this.each(function(){\n\t\t\t\n\t\t\tvar obj = $(this),\n\t\t\t\tto = (settings.to != false) ? settings.to : parseInt(obj.attr('data-percent'));\n\t\t\t\tif(to > 100){\n\t\t\t\t\tto = 100;\n\t\t\t\t};\n\t\t\tvar from = settings.from,\n\t\t\t\tloops = Math.ceil(settings.speed / settings.interval),\n            \tincrement = (to - from) / loops,\n\t\t\t\tloopCount = 0,\n\t\t\t\tinterval = setInterval(updateValue, settings.interval);\n\t\t\t\n\t\t\tobj.find(settings.classes.skillBarBar).animate({\n\t\t\t\twidth: parseInt(obj.attr('data-percent'))+'%'\n\t\t\t}, settings.speed);\n\t\t\t\t\t\t\n\t\t\tfunction updateValue(){\n\t\t\t\tfrom += increment;\n                loopCount++;\n                $(obj).find(settings.classes.skillBarPercent).text(from.toFixed(settings.decimals)+'%');\n\n                if (typeof(settings.onUpdate) == 'function') {\n                    settings.onUpdate.call(obj, from);\n                }\n\n                if (loopCount >= loops) {\n                    clearInterval(interval);\n                    from = to;\n\n                    if (typeof(settings.onComplete) == 'function') {\n                        settings.onComplete.call(obj, from);\n                    }\n                }\n\t\t\t}\n\t\t\t\n        });\n \n    };\n \n}( jQuery ));"]},"metadata":{},"sourceType":"module"}