{"ast":null,"code":"/*\n * jQuery One Page Nav Plugin\n * http://github.com/davist11/jQuery-One-Page-Nav\n *\n * Copyright (c) 2010 Trevor Davis (http://trevordavis.net)\n * Dual licensed under the MIT and GPL licenses.\n * Uses the same license as jQuery, see:\n * http://jquery.org/license\n *\n * @version 3.0.0\n *\n * Example usage:\n * $('#nav').onePageNav({\n *   currentClass: 'current',\n *   changeHash: false,\n *   scrollSpeed: 750\n * });\n */\n;\n\n(function ($, window, document, undefined) {\n  // our plugin constructor\n  var OnePageNav = function (elem, options) {\n    this.elem = elem;\n    this.$elem = $(elem);\n    this.options = options;\n    this.metadata = this.$elem.data('plugin-options');\n    this.$win = $(window);\n    this.sections = {};\n    this.didScroll = false;\n    this.$doc = $(document);\n    this.docHeight = this.$doc.height();\n  }; // the plugin prototype\n\n\n  OnePageNav.prototype = {\n    defaults: {\n      navItems: 'a',\n      currentClass: 'current',\n      changeHash: false,\n      easing: 'swing',\n      filter: '',\n      scrollOffset: 89,\n      scrollSpeed: 750,\n      scrollThreshold: 0.5,\n      begin: false,\n      end: false,\n      scrollChange: false\n    },\n    init: function () {\n      // Introduce defaults that can be extended either\n      // globally or using an object literal.\n      this.config = $.extend({}, this.defaults, this.options, this.metadata);\n      this.$nav = this.$elem.find(this.config.navItems); //Filter any links out of the nav\n\n      if (this.config.filter !== '') {\n        this.$nav = this.$nav.filter(this.config.filter);\n      } //Handle clicks on the nav\n\n\n      this.$nav.on('click.onePageNav', $.proxy(this.handleClick, this)); //Get the section positions\n\n      this.getPositions(); //Handle scroll changes\n\n      this.bindInterval(); //Update the positions on resize too\n\n      this.$win.on('resize.onePageNav', $.proxy(this.getPositions, this));\n      return this;\n    },\n    adjustNav: function (self, $parent) {\n      self.$elem.find('.' + self.config.currentClass).removeClass(self.config.currentClass);\n      $parent.addClass(self.config.currentClass);\n    },\n    bindInterval: function () {\n      var self = this;\n      var docHeight;\n      self.$win.on('scroll.onePageNav', function () {\n        self.didScroll = true;\n      });\n      self.t = setInterval(function () {\n        docHeight = self.$doc.height(); //If it was scrolled\n\n        if (self.didScroll) {\n          self.didScroll = false;\n          self.scrollChange();\n        } //If the document height changes\n\n\n        if (docHeight !== self.docHeight) {\n          self.docHeight = docHeight;\n          self.getPositions();\n        }\n      }, 250);\n    },\n    getHash: function ($link) {\n      return $link.attr('href').split('#')[1];\n    },\n    getPositions: function () {\n      var self = this;\n      var linkHref;\n      var topPos;\n      var $target;\n      self.$nav.each(function () {\n        linkHref = self.getHash($(this));\n        $target = $('#' + linkHref);\n\n        if ($target.length) {\n          topPos = $target.offset().top;\n          self.sections[linkHref] = Math.round(topPos);\n        }\n      });\n    },\n    getSection: function (windowPos) {\n      var returnValue = null;\n      var windowHeight = Math.round(this.$win.height() * this.config.scrollThreshold);\n\n      for (var section in this.sections) {\n        if (this.sections[section] - windowHeight < windowPos) {\n          returnValue = section;\n        }\n      }\n\n      return returnValue;\n    },\n    handleClick: function (e) {\n      var self = this;\n      var $link = $(e.currentTarget);\n      var $parent = $link.parent();\n      var newLoc = '#' + self.getHash($link);\n\n      if (!$parent.hasClass(self.config.currentClass)) {\n        //Start callback\n        if (self.config.begin) {\n          self.config.begin();\n        } //Change the highlighted nav item\n\n\n        self.adjustNav(self, $parent); //Removing the auto-adjust on scroll\n\n        self.unbindInterval(); //Scroll to the correct position\n\n        self.scrollTo(newLoc, function () {\n          //Do we need to change the hash?\n          if (self.config.changeHash) {\n            window.location.hash = newLoc;\n          } //Add the auto-adjust on scroll back in\n\n\n          self.bindInterval(); //End callback\n\n          if (self.config.end) {\n            self.config.end();\n          }\n        });\n      }\n\n      e.preventDefault();\n    },\n    scrollChange: function () {\n      var windowTop = this.$win.scrollTop();\n      var position = this.getSection(windowTop);\n      var $parent; //If the position is set\n\n      if (position !== null) {\n        $parent = this.$elem.find('a[href$=\"#' + position + '\"]').parent(); //If it's not already the current section\n\n        if (!$parent.hasClass(this.config.currentClass)) {\n          //Change the highlighted nav item\n          this.adjustNav(this, $parent); //If there is a scrollChange callback\n\n          if (this.config.scrollChange) {\n            this.config.scrollChange($parent);\n          }\n        }\n      }\n    },\n    scrollTo: function (target, callback) {\n      var offset = $(target).offset().top;\n      $('html, body').animate({\n        scrollTop: offset - this.config.scrollOffset // this is the important line\n\n      }, this.config.scrollSpeed, this.config.easing, callback);\n    },\n    unbindInterval: function () {\n      clearInterval(this.t);\n      this.$win.unbind('scroll.onePageNav');\n    }\n  };\n  OnePageNav.defaults = OnePageNav.prototype.defaults;\n\n  $.fn.onePageNav = function (options) {\n    return this.each(function () {\n      new OnePageNav(this, options).init();\n    });\n  };\n})(jQuery, window, document);","map":{"version":3,"sources":["/home/uneey/Desktop/projects/Simex/simex-front/src/js/jquery.nav.js"],"names":["$","window","document","undefined","OnePageNav","elem","options","$elem","metadata","data","$win","sections","didScroll","$doc","docHeight","height","prototype","defaults","navItems","currentClass","changeHash","easing","filter","scrollOffset","scrollSpeed","scrollThreshold","begin","end","scrollChange","init","config","extend","$nav","find","on","proxy","handleClick","getPositions","bindInterval","adjustNav","self","$parent","removeClass","addClass","t","setInterval","getHash","$link","attr","split","linkHref","topPos","$target","each","length","offset","top","Math","round","getSection","windowPos","returnValue","windowHeight","section","e","currentTarget","parent","newLoc","hasClass","unbindInterval","scrollTo","location","hash","preventDefault","windowTop","scrollTop","position","target","callback","animate","clearInterval","unbind","fn","onePageNav","jQuery"],"mappings":"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","sourcesContent":["/*\n * jQuery One Page Nav Plugin\n * http://github.com/davist11/jQuery-One-Page-Nav\n *\n * Copyright (c) 2010 Trevor Davis (http://trevordavis.net)\n * Dual licensed under the MIT and GPL licenses.\n * Uses the same license as jQuery, see:\n * http://jquery.org/license\n *\n * @version 3.0.0\n *\n * Example usage:\n * $('#nav').onePageNav({\n *   currentClass: 'current',\n *   changeHash: false,\n *   scrollSpeed: 750\n * });\n */\n\n;(function($, window, document, undefined){\n\n    // our plugin constructor\n    var OnePageNav = function(elem, options){\n        this.elem = elem;\n        this.$elem = $(elem);\n        this.options = options;\n        this.metadata = this.$elem.data('plugin-options');\n        this.$win = $(window);\n        this.sections = {};\n        this.didScroll = false;\n        this.$doc = $(document);\n        this.docHeight = this.$doc.height();\n    };\n\n    // the plugin prototype\n    OnePageNav.prototype = {\n        defaults: {\n            navItems: 'a',\n            currentClass: 'current',\n            changeHash: false,\n            easing: 'swing',\n            filter: '',\n            scrollOffset: 89,\n            scrollSpeed: 750,\n            scrollThreshold: 0.5,\n            begin: false,\n            end: false,\n            scrollChange: false\n        },\n\n        init: function() {\n            // Introduce defaults that can be extended either\n            // globally or using an object literal.\n            this.config = $.extend({}, this.defaults, this.options, this.metadata);\n\n            this.$nav = this.$elem.find(this.config.navItems);\n\n            //Filter any links out of the nav\n            if(this.config.filter !== '') {\n                this.$nav = this.$nav.filter(this.config.filter);\n            }\n\n            //Handle clicks on the nav\n            this.$nav.on('click.onePageNav', $.proxy(this.handleClick, this));\n\n            //Get the section positions\n            this.getPositions();\n\n            //Handle scroll changes\n            this.bindInterval();\n\n            //Update the positions on resize too\n            this.$win.on('resize.onePageNav', $.proxy(this.getPositions, this));\n\n            return this;\n        },\n\n        adjustNav: function(self, $parent) {\n            self.$elem.find('.' + self.config.currentClass).removeClass(self.config.currentClass);\n            $parent.addClass(self.config.currentClass);\n        },\n\n        bindInterval: function() {\n            var self = this;\n            var docHeight;\n\n            self.$win.on('scroll.onePageNav', function() {\n                self.didScroll = true;\n            });\n\n            self.t = setInterval(function() {\n                docHeight = self.$doc.height();\n\n                //If it was scrolled\n                if(self.didScroll) {\n                    self.didScroll = false;\n                    self.scrollChange();\n                }\n\n                //If the document height changes\n                if(docHeight !== self.docHeight) {\n                    self.docHeight = docHeight;\n                    self.getPositions();\n                }\n            }, 250);\n        },\n\n        getHash: function($link) {\n            return $link.attr('href').split('#')[1];\n        },\n\n        getPositions: function() {\n            var self = this;\n            var linkHref;\n            var topPos;\n            var $target;\n\n            self.$nav.each(function() {\n                linkHref = self.getHash($(this));\n                $target = $('#' + linkHref);\n\n                if($target.length) {\n                    topPos = $target.offset().top;\n                    self.sections[linkHref] = Math.round(topPos);\n                }\n            });\n        },\n\n        getSection: function(windowPos) {\n            var returnValue = null;\n            var windowHeight = Math.round(this.$win.height() * this.config.scrollThreshold);\n\n            for(var section in this.sections) {\n                if((this.sections[section] - windowHeight) < windowPos) {\n                    returnValue = section;\n                }\n            }\n\n            return returnValue;\n        },\n\n        handleClick: function(e) {\n            var self = this;\n            var $link = $(e.currentTarget);\n            var $parent = $link.parent();\n            var newLoc = '#' + self.getHash($link);\n\n            if(!$parent.hasClass(self.config.currentClass)) {\n                //Start callback\n                if(self.config.begin) {\n                    self.config.begin();\n                }\n\n                //Change the highlighted nav item\n                self.adjustNav(self, $parent);\n\n                //Removing the auto-adjust on scroll\n                self.unbindInterval();\n\n                //Scroll to the correct position\n                self.scrollTo(newLoc, function() {\n                    //Do we need to change the hash?\n                    if(self.config.changeHash) {\n                        window.location.hash = newLoc;\n                    }\n\n                    //Add the auto-adjust on scroll back in\n                    self.bindInterval();\n\n                    //End callback\n                    if(self.config.end) {\n                        self.config.end();\n                    }\n                });\n            }\n\n            e.preventDefault();\n        },\n\n        scrollChange: function() {\n            var windowTop = this.$win.scrollTop();\n            var position = this.getSection(windowTop);\n            var $parent;\n\n            //If the position is set\n            if(position !== null) {\n                $parent = this.$elem.find('a[href$=\"#' + position + '\"]').parent();\n\n                //If it's not already the current section\n                if(!$parent.hasClass(this.config.currentClass)) {\n                    //Change the highlighted nav item\n                    this.adjustNav(this, $parent);\n\n                    //If there is a scrollChange callback\n                    if(this.config.scrollChange) {\n                        this.config.scrollChange($parent);\n                    }\n                }\n            }\n        },\n\n        scrollTo: function(target, callback) {\n            var offset = $(target).offset().top;\n\n            $('html, body').animate({\n                scrollTop: offset - this.config.scrollOffset,  // this is the important line\n            }, this.config.scrollSpeed, this.config.easing, callback);\n        },\n\n        unbindInterval: function() {\n            clearInterval(this.t);\n            this.$win.unbind('scroll.onePageNav');\n        }\n    };\n\n    OnePageNav.defaults = OnePageNav.prototype.defaults;\n\n    $.fn.onePageNav = function(options) {\n        return this.each(function() {\n            new OnePageNav(this, options).init();\n        });\n    };\n\n})( jQuery, window , document );"]},"metadata":{},"sourceType":"module"}